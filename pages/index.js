
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState } from 'react'
import { useRouter } from 'next/router'
import { useDispatch, useSelector } from 'react-redux'
import { loginAsGuest, signin, logout, login } from '../store/features/accountSlice'
import { useEffect } from 'react'
import Link from 'next/link'


export default function Home() {
  const dispatch = useDispatch()
  const connected = useSelector((state)=>state.account.connected)
  const user = useSelector((state)=>state.account.connectedAccount)
  const [loginActive, setLoginActive] = useState(false)
  const [signinActive, setSignActive] = useState(false)
  const allEmail = useSelector((state)=>state.account.allEmail)
  const router = useRouter()


  

  const [signUserName, setSignUserName] = useState('')
  const [signEmail, setSignEmail] = useState('')
  const [signPsw, setSignPsw] = useState('')
  const [signPswConfirm, setSignPswConfirm] = useState('')

  
  const [nbAction, setNbAction] = useState(0)
  const [userNameInputLogin, setuserNameInputLogin] = useState('')
  const [passwordLogin, setPasswordLogin] = useState('')


  
  

  function loginGuest() {
    dispatch(loginAsGuest())
    setLoginActive(false)
  }
  function tryLogOut() {
    dispatch(logout())
  }
  function tryLogin() {
     dispatch(login({userInfo: userNameInputLogin, password: passwordLogin}))
  }

  function clearSignState() {
    setSignEmail('')
    setSignPsw('')
    setSignUserName('')
    setSignPswConfirm('')
  }

  function trySignIn() {
    let valid = true;
    if (!signEmail.includes('@') || allEmail.includes(signEmail)) {
      console.log('email invalid');
      valid = false
    }
    if (signUserName.length < 3) {
      console.log('username too short');
      valid = false
    }
    if (signPsw.length<8 || signPsw!=signPswConfirm) {
      console.log('psw invalid');
      valid = false
    }
    if (valid) {
      console.log('new user try to create');
      dispatch(signin({username: signUserName, email:signEmail, password: signPsw}))
      clearSignState()
    }else{
      console.log('new user creation failed');
    }
  }
  
  

  return (
    router.isFallback ?
    <div className={styles.loading}>Loading...</div>
    :
    <>
      <Head>
        <title>login</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
        <div className={styles.main}>
          {
            connected ?
            <div className={styles.alreadyLogin}>
              <h1>You are connected as {user.username}</h1>
              <span className={styles.link} onClick={tryLogOut}>Logout</span>
              <Link className={styles.link} href={'/mainPage'}><h3>To the website</h3></Link>

            </div>:
            <>
              <div className={loginActive?styles.login:styles.login+' '+styles.hide}>
              <h1>Login:</h1>
              <div className={styles.cross} onClick={()=>{setLoginActive(false)}}>X</div>
              <input   onChange={(e)=>{setuserNameInputLogin(e.target.value)}} className={styles.input} placeholder='Please enter your userName or your Email'/>
              <input  onChange={(e)=>{setPasswordLogin(e.target.value)}}  className={styles.input} placeholder='Please enter your password'/>
              <button  className={styles.btn} onClick={tryLogin}>Login</button>
            </div>
            <div className={signinActive?styles.signin:styles.signin+' '+styles.hide}>
              <h1>Signin:</h1>
              <div className={styles.cross} onClick={()=>{setSignActive(false)}}>X</div>
              <input value={signUserName} onChange={(e)=>{setSignUserName(e.target.value)}}  className={styles.input} placeholder='Please enter your userName'/>
              <input value={signEmail} onChange={(e)=>{setSignEmail(e.target.value)}}  className={styles.input} placeholder='Please enter your Email'/>
              <input value={signPsw} type='password' onChange={(e)=>{setSignPsw(e.target.value)}}  className={styles.input} placeholder='Please enter your password'/>
              <input value={signPswConfirm} type='password' onChange={(e)=>{setSignPswConfirm(e.target.value)}}  className={signPsw==signPswConfirm? styles.input: styles.input+" "+styles.badInput} placeholder='Please confirm your password'/>
              <button onClick={trySignIn}  className={styles.btn}>Sign in</button>
            </div>
            <div className={styles.welcome}>
              <h1>Welcome to BOOKSHELF</h1>
              <div className={styles.options}>
                <span className={styles.link} onClick={()=>{setLoginActive(true)}}>Login</span>
                <span className={styles.link} onClick={()=>{setSignActive(true)}}>Sign in</span>
                <Link className={styles.link} href={'/mainPage'}>access to website</Link>
              </div>
            </div>
           
            </> 
          }
          
        </div>
      
    </>
  )
}
